import boto3
import logging
import sys
import datetime
import rds_config
import pymysql
rds_host  = "fdstage-shard7-vpc.cwcfhlpilw8g.us-east-1.rds.amazonaws.com"
name = rds_config.db_username
password = rds_config.db_password
db_name = rds_config.db_name
port = 3306

logger = logging.getLogger()
logger.setLevel(logging.INFO)


server_address = (rds_host, port)
try:
    conn = pymysql.connect(rds_host, user=name, passwd=password, db=db_name, connect_timeout=5)
except:
    logger.error("ERROR: Unexpected error: Could not connect to MySql instance.")
    sys.exit()

logger.info("SUCCESS: Connection to RDS mysql instance succeeded")


#setup simple logging for INFO



def lambda_handler(event, context):
    item_count = 0
    #generating list for opswork stack and corresponding id
    ops = boto3.client('opsworks')
    stack_list = ops.describe_stacks()
    opswork_id = {"no name": "null","Docker Registry": "Docker Registry"}
    for i in stack_list['Stacks']:
        opswork_id[i['Name']] = i['StackId']
    filters = [
        {
            'Name': 'instance-state-name',
            'Values': ['running']
        }
    ]
    name = "no name"
    ops_name = "no name"
    ec2_client = boto3.resource('ec2')
    account_id = context.invoked_function_arn.split(':')[4]
    instances = ec2_client.instances.filter(Filters=filters)
    with conn.cursor() as cur:
        for i in instances:
            if i.tags is not None:
                for t in i.tags:
                    if(t['Key'] == 'opsworks:stack'):
                        ops_name = t['Value']
                    if(t['Key'] == 'Name'):
                        name = t['Value']
            else:
                print "tags is none"
            time = (i.launch_time).strftime('%y-%m-%d %H:%M:%S')
            cur.execute("""INSERT INTO instances (aws_account_id,name,opswork_id,instance_id,instance_type,start_time,days_elapsed,acknowledgement)  VALUES (%s, %s, %s, %s, %s, %s, %s, %s)""", (account_id,name,opswork_id[ops_name],i.id,i.instance_type,time,-1,0))
            conn.commit()
        item_count += 1
    return "Added %d items from RDS MySQL table" %(item_count)